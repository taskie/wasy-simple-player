{"version":3,"sources":["webpack:///webpack/bootstrap 4c70102c579f3587f438","webpack:///./node_modules/wasy/dist/midi/event.js","webpack:///./node_modules/wasy/dist/binary/data-view-util.js","webpack:///./node_modules/wasy/dist/signal.js","webpack:///./src/app.ts","webpack:///./node_modules/wasy/dist/index.js","webpack:///./node_modules/wasy/dist/wasy.js","webpack:///./node_modules/wasy/dist/player/timer.js","webpack:///./node_modules/wasy/dist/midi/instrument.js","webpack:///./node_modules/wasy/dist/synth.js","webpack:///./node_modules/wasy/dist/synth/patch.js","webpack:///./node_modules/wasy/dist/player/tuning.js","webpack:///./node_modules/wasy/dist/webmidi/midi-in.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,oBAAoB,kCAAkC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kCAAkC;AACxD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kCAAkC;AACvD;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AC1HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AAC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B,KAAK,WAAW,CAAC,CAAC,CAAC;YACtD,YAAY,GAAG,IAAI,kBAAkB,EAAE,CAAC;QACzC,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACrB,CAAC;CACD;AAED,IAAI,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;AAC5B,GAAG,CAAC,KAAK,EAAE,CAAC;;;;;;;;AC/RZ;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;ACRA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8BAA8B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrE;AACA;AACA;AACA;AACA,gC;;;;;;;AC1HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8CAA8C;AACxE,6BAA6B,6CAA6C;AAC1E,0BAA0B,iCAAiC;AAC3D,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AC/DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6CAA6C;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0CAA0C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAA4D;AACpF,kBAAkB,0DAA0D;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;AC9MA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkiC;;;;;;;ACzSA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B;AACjD,wBAAwB,iCAAiC;AACzD,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;AChEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;ACnBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mC","file":"./build/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c70102c579f3587f438","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dvu = require(\"../binary/data-view-util\");\nclass Event {\n    constructor(dataView, tick, status) {\n        this.dataView = dataView;\n        this.tick = tick;\n        this.status = status;\n    }\n    toWebMidiLinkString() {\n        let data = [this.status];\n        for (var i = 0; i < this.dataView.byteLength; ++i) {\n            data.push(this.dataView.getUint8(i));\n        }\n        return \"midi,\" + data.map((x) => x.toString(16)).join(\",\");\n    }\n    static create(dataView, tick, status) {\n        if (!this.statusEventMap) {\n            this.statusEventMap = {\n                0x80: NoteOffEvent,\n                0x90: NoteOnEvent,\n                0xA0: PolyphonicKeyPressureEvent,\n                0xB0: ControlChangeEvent,\n                0xC0: ProgramChangeEvent,\n                0xD0: ChannelPressureEvent,\n                0xE0: PitchBendEvent,\n                0xF0: SystemExclusiveEvent,\n                0xFF: MetaEvent,\n            };\n        }\n        let statusType = status & 0xF0;\n        if (status === 0xFF) {\n            return MetaEvent.create(dataView, tick, status);\n        }\n        else if (status === 0x90 && dataView.getUint8(1) === 0) {\n            return new NoteOffEvent(dataView, tick, 0x80);\n        }\n        else {\n            let EventClass = this.statusEventMap[statusType];\n            return new EventClass(dataView, tick, status);\n        }\n    }\n    get statusType() { return this.status & 0xF0; }\n}\nexports.Event = Event;\nclass ChannelEvent extends Event {\n    get channel() { return this.status & 0x0F; }\n}\nexports.ChannelEvent = ChannelEvent;\nclass NoteOffEvent extends ChannelEvent {\n    get noteNumber() { return this.dataView.getUint8(0); }\n    get velocity() { return this.dataView.getUint8(1); }\n}\nexports.NoteOffEvent = NoteOffEvent;\nclass NoteOnEvent extends ChannelEvent {\n    get noteNumber() { return this.dataView.getUint8(0); }\n    get velocity() { return this.dataView.getUint8(1); }\n}\nexports.NoteOnEvent = NoteOnEvent;\nclass PolyphonicKeyPressureEvent extends ChannelEvent {\n}\nexports.PolyphonicKeyPressureEvent = PolyphonicKeyPressureEvent;\nclass ControlChangeEvent extends ChannelEvent {\n    get controller() { return this.dataView.getUint8(0); }\n    get value() { return this.dataView.getUint8(1); }\n}\nexports.ControlChangeEvent = ControlChangeEvent;\nclass ProgramChangeEvent extends ChannelEvent {\n    get program() { return this.dataView.getUint8(0); }\n}\nexports.ProgramChangeEvent = ProgramChangeEvent;\nclass ChannelPressureEvent extends ChannelEvent {\n}\nexports.ChannelPressureEvent = ChannelPressureEvent;\nclass PitchBendEvent extends ChannelEvent {\n    get value() {\n        return this.dataView.getUint8(0) + (this.dataView.getUint8(1) << 7) - 8192;\n    }\n}\nexports.PitchBendEvent = PitchBendEvent;\nclass FxEvent extends Event {\n    get statusType() { return this.status; }\n}\nexports.FxEvent = FxEvent;\nclass SystemExclusiveEvent extends FxEvent {\n}\nexports.SystemExclusiveEvent = SystemExclusiveEvent;\nclass MetaEvent extends FxEvent {\n    static create(dataView, tick, status) {\n        if (!this.typeIndexEventMap) {\n            this.typeIndexEventMap = {\n                0x51: TempoMetaEvent\n            };\n        }\n        let typeIndex = dataView.getUint8(0);\n        if (typeIndex in this.typeIndexEventMap) {\n            let EventClass = this.typeIndexEventMap[typeIndex];\n            return new EventClass(dataView, tick, status);\n        }\n        else {\n            return new MetaEvent(dataView, tick, status);\n        }\n    }\n    get typeIndex() { return this.dataView.getUint8(0); }\n    get data() {\n        let { value, byteLength } = dvu.dataViewGetUintVariable(this.dataView, 1);\n        return dvu.dataViewGetSubDataView(this.dataView, 1 + byteLength, value);\n    }\n}\nexports.MetaEvent = MetaEvent;\nclass TempoMetaEvent extends MetaEvent {\n    get rawTempo() {\n        return dvu.dataViewGetUint(this.data, 0, false);\n    }\n    get secondsPerBeat() {\n        return this.rawTempo * 10e-7; // ?\n    }\n    get beatsPerMinute() {\n        return 60 / this.secondsPerBeat;\n    }\n}\nexports.TempoMetaEvent = TempoMetaEvent;\n//# sourceMappingURL=event.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/midi/event.js\n// module id = 0\n// module chunks = 0 1","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction dataViewGetSubDataView(dataView, byteOffset, byteLength) {\n    if (typeof byteLength === \"undefined\") {\n        byteLength = dataView.byteLength - byteOffset;\n    }\n    return new DataView(dataView.buffer, dataView.byteOffset + byteOffset, byteLength);\n}\nexports.dataViewGetSubDataView = dataViewGetSubDataView;\nfunction dataViewGetUint(dataView, byteOffset, isLittleEndian, byteLength) {\n    var value = 0;\n    if (typeof byteLength === \"undefined\") {\n        byteLength = dataView.byteLength - byteOffset;\n    }\n    if (isLittleEndian) {\n        for (var i = byteLength - 1; i >= 0; --i) {\n            value = (value << 8) + dataView.getUint8(byteOffset + i);\n        }\n    }\n    else {\n        for (var i = 0; i < byteLength; ++i) {\n            value = (value << 8) + dataView.getUint8(byteOffset + i);\n        }\n    }\n    return value;\n}\nexports.dataViewGetUint = dataViewGetUint;\nfunction dataViewGetUintVariable(dataView, byteOffset) {\n    var value = 0;\n    var pos = 0;\n    for (;;) {\n        let byte = dataView.getUint8(byteOffset + pos);\n        ++pos;\n        let msb = byte & 0b10000000;\n        let val = byte & 0b01111111;\n        value = (value << 7) + val;\n        if (!msb) {\n            break;\n        }\n    }\n    return { value, byteLength: pos };\n}\nexports.dataViewGetUintVariable = dataViewGetUintVariable;\nfunction dataViewGetString(dataView, byteOffset, length) {\n    let bytes = new Uint8Array(dataView.buffer, dataView.byteOffset + byteOffset, length);\n    return String.fromCharCode.apply(null, bytes);\n}\nexports.dataViewGetString = dataViewGetString;\n;\n//# sourceMappingURL=data-view-util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/binary/data-view-util.js\n// module id = 1\n// module chunks = 0 1","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Signal {\n    constructor() {\n        this.listeners = [];\n    }\n    on(listener) {\n        this.listeners.push(listener);\n    }\n    off(listener) {\n        let pos = this.listeners.indexOf(listener);\n        if (pos !== -1) {\n            this.listeners.splice(pos, 1);\n        }\n    }\n    offAll() {\n        this.listeners = [];\n    }\n    emit(data) {\n        for (let listener of this.listeners) {\n            listener(data);\n        }\n    }\n}\nexports.default = Signal;\n//# sourceMappingURL=signal.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/signal.js\n// module id = 2\n// module chunks = 0","import { wasy, midi, midiIn } from \"wasy\";\n\nclass KeyboardView {\n\tstatic blackKey = \"010100101010\";\n\tstatic W = 640 / 128;\n\tstatic H = 480 / 16 / 2;\n\tkeyboardMap: boolean[][];\n\tconstructor(public canvasContext: CanvasRenderingContext2D) {\n\t\tthis.keyboardMap = [];\n\t\tfor (let i = 0; i < 16; ++i) {\n\t\t\tthis.keyboardMap[i] = []\n\t\t\tfor (let j = 0; j < 128; ++j) {\n\t\t\t\tthis.keyboardMap[i][j] = false\n\t\t\t}\n\t\t}\n\t\tthis.draw();\n\t}\n\ttimedEventListener(e: wasy.TimedEvent) {\n\t\tlet me = e.midiEvent\n\t\tif (me instanceof midi.ChannelEvent) {\n\t\t\tif (me instanceof midi.NoteOnEvent) {\n\t\t\t\tthis.keyboardMap[me.channel][me.noteNumber] = true;\n\t\t\t} else if (me instanceof midi.NoteOffEvent) {\n\t\t\t\tthis.keyboardMap[me.channel][me.noteNumber] = false;\n\t\t\t}\n\t\t}\n\t}\n\tdraw() {\n\t\tthis.canvasContext.fillStyle = \"#002b36\";\n\t\tthis.canvasContext.fillRect(0, 0, 640, 240);\n\t\tconst w = KeyboardView.W;\n\t\tconst h = KeyboardView.H;\n\t\tfor (let i = 0; i < 16; ++i) {\n\t\t\tfor (let j = 0; j < 128; ++j) {\n\t\t\t\tif (this.keyboardMap[i][j]) {\n\t\t\t\t\tthis.canvasContext.fillStyle = \"#dc322f\";\n\t\t\t\t\tthis.canvasContext.fillRect(j * w, i * h + 1, w, h - 2);\n\t\t\t\t} else {\n\t\t\t\t\tif (KeyboardView.blackKey[j % 12] === \"1\") {\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.canvasContext.fillStyle = \"#073642\";\n\t\t\t\t\t\tthis.canvasContext.fillRect(j * w, i * h + 1, w, h - 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass AnalyserView {\n\tarray: Uint8Array;\n\tpublic _analyser: AnalyserNode;\n\tconstructor(public canvasContext: CanvasRenderingContext2D) {\n\t\tthis.array = null;\n\t\tthis.draw();\n\t}\n\tset analyser(analyser: AnalyserNode) {\n\t\tthis.array = new Uint8Array(analyser.frequencyBinCount | 0);\n\t\tthis._analyser = analyser;\n\t}\n\tget analyser() { return this._analyser; }\n\tdraw() {\n\t\tthis.canvasContext.fillStyle = \"#002b36\";\n\t\tthis.canvasContext.fillRect(0, 240, 640, 240);\n\t\tif (this.analyser == null) return;\n\n\t\t// freq\n\t\tthis.analyser.getByteFrequencyData(this.array);\n\t\tthis.canvasContext.beginPath();\n\t\tfor (let i = 0; i < 640; ++i) {\n\t\t\tlet value = this.array[i / 640 * this.array.length | 0] / 255;\n\t\t\tif (i == 0) {\n\t\t\t\tthis.canvasContext.moveTo(0, 480 - 240 * value);\n\t\t\t} else {\n\t\t\t\tthis.canvasContext.lineTo(i, 480 - 240 * value);\n\t\t\t}\n\t\t}\n\t\tthis.canvasContext.lineTo(640, 480);\n\t\tthis.canvasContext.lineTo(0, 480);\n\t\tthis.canvasContext.closePath();\n\t\tthis.canvasContext.fillStyle = \"#073642\";\n\t\tthis.canvasContext.fill();\n\n\t\t// wave\n\t\tthis.analyser.getByteTimeDomainData(this.array);\n\t\tthis.canvasContext.beginPath();\n\t\tfor (let i = 0; i < 640; ++i) {\n\t\t\tlet value = this.array[i / 640 * this.array.length | 0] / 255;\n\t\t\tif (i == 0) {\n\t\t\t\tthis.canvasContext.moveTo(0, 480 - 240 * value);\n\t\t\t} else {\n\t\t\t\tthis.canvasContext.lineTo(i, 480 - 240 * value);\n\t\t\t}\n\t\t}\n\t\tthis.canvasContext.strokeStyle = \"#dc322f\";\n\t\tthis.canvasContext.stroke();\n\t}\n}\n\ninterface Song {\n\tname: string\n\tartist?: string\n\tfile: string\n}\n\nclass Application {\n\taudioContext: AudioContext;\n\tcanvasContext: CanvasRenderingContext2D;\n\tuserFile: ArrayBuffer;\n\twasy: wasy.Wasy;\n\tkeyboardView: KeyboardView;\n\tanalyserView: AnalyserView;\n\tanalyser: AnalyserNode;\n\ttimerId: any;\n\tsongs: Song[];\n\tsongDirectory: string;\n\n\tmidiIns: midiIn.MIDIIn[];\n\n\tstart() {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", this.run.bind(this));\n\t}\n\n\trun() {\n\t\tthis.audioContext = this.getAudioContext();\n\n\t\tlet canvas = <HTMLCanvasElement> document.querySelector(\"canvas#keyboardCanvas\");\n\t\tcanvas.ondragover = e => e.preventDefault();\n\t\tcanvas.addEventListener(\"drop\", this.canvasDropListener.bind(this));\n\n\t\tthis.canvasContext = <CanvasRenderingContext2D> canvas.getContext(\"2d\");\n\t\tthis.keyboardView = new KeyboardView(this.canvasContext);\n\t\tthis.analyserView = new AnalyserView(this.canvasContext);\n\n\t\tthis.midiIns = [];\n\t\tthis.midiIns.push(new midiIn.WebMIDIIn());\n\t\tthis.midiIns.push(new midiIn.WebMidiLinkIn());\n\t\tfor (const midiIn of this.midiIns) {\n\t\t\tmidiIn.on((e) => this.midiEventListener(e));\n\t\t}\n\n\t\tlet fileButton = <HTMLInputElement> document.querySelector(\"input#fileButton\");\n\t\tfileButton.addEventListener(\"change\", this.fileChangeListener.bind(this));\n\t\tlet playButton = <HTMLInputElement> document.querySelector(\"input#playButton\");\n\t\tplayButton.addEventListener(\"click\", this.playListener.bind(this));\n\t\tlet pauseButton = <HTMLInputElement> document.querySelector(\"input#pauseButton\");\n\t\tpauseButton.addEventListener(\"click\", this.pauseListener.bind(this));\n\t\tlet fileSelector = <HTMLInputElement> document.querySelector(\"select#fileSelector\");\n\t\tfileSelector.addEventListener(\"change\", this.fileSelectListener.bind(this));\n\n\t\tlet lastComponent = location.href.split(\"/\").pop();\n\t\tif (lastComponent[0] === \"?\") {\n\t\t\tthis.songDirectory = `./midi/${encodeURIComponent(lastComponent.slice(1)) }/`;\n\t\t} else {\n\t\t\tthis.songDirectory = \"./midi/\";\n\t\t}\n\t\tlet jsonPath = this.songDirectory + \"songs.json\";\n\t\ttry {\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"GET\", jsonPath, true);\n\t\t\txhr.onload = (e) => {\n\t\t\t\tlet json = xhr.responseText;\n\t\t\t\tthis.songs = JSON.parse(json);\n\t\t\t\tfor (let song of this.songs) {\n\t\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\t\tlet value = `${song.name} （${song.artist}）`;\n\t\t\t\t\tif (song.artist == null) value = song.name;\n\t\t\t\t\toption.innerHTML = value;\n\t\t\t\t\tfileSelector.appendChild(option);\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send();\n\t\t\tthis.playWithBuffer();\n\t\t} catch (e) {\n\t\t\tconsole.error(\"XHR Error\");\n\t\t}\n\t}\n\n\tfileChangeListener(e: Event) {\n\t\tlet files = (<HTMLInputElement> e.target).files;\n\t\tlet file = files[0];\n\t\tthis.setUserFile(file);\n\t}\n\n\tcanvasDropListener(e: Event) {\n\t\tlet files: FileList = (<any>e).dataTransfer.files;\n\t\tlet fileButton = <HTMLInputElement> document.querySelector(\"input#fileButton\");\n\t\t(<any>fileButton).files = files;\n\t\tlet file = files[0];\n\t\tthis.setUserFile(file);\n\t\treturn e.preventDefault();\n\t}\n\n\tsetUserFile(file: File) {\n\t\tif (file == null) return;\n\t\tlet fileReader = new FileReader();\n\t\tfileReader.onload = (e) => {\n\t\t\tthis.userFile = (<any> e.target).result;\n\t\t\tlet userFileRadio = <HTMLInputElement> document.querySelector(\"input#userFileRadio\");\n\t\t\tuserFileRadio.checked = true;\n\t\t};\n\t\tfileReader.readAsArrayBuffer(file);\n\t}\n\n\tfileSelectListener(e: Event) {\n\t\tlet serverFileRadio = <HTMLInputElement> document.querySelector(\"input#serverFileRadio\");\n\t\tserverFileRadio.checked = true;\n\t}\n\n\tplayListener(e: Event) {\n\t\tthis.keyboardView = new KeyboardView(this.canvasContext);\n\t\tthis.analyserView = new AnalyserView(this.canvasContext);\n\n\t\tlet midiSource = <HTMLInputElement> document.querySelector(\"input[name=midiSource]:checked\");\n\t\tif (midiSource.value == \"userFile\") {\n\t\t\tif (this.userFile != null) {\n\t\t\t\tthis.playWithBuffer(this.userFile);\n\t\t\t}\n\t\t} else {\n\t\t\tlet fileSelector = <HTMLSelectElement> document.querySelector(\"select#fileSelector\");\n\t\t\tlet song = this.songs[fileSelector.selectedIndex];\n\t\t\tlet xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"GET\", this.songDirectory + song.file, true);\n\t\t\txhr.responseType = \"arraybuffer\";\n\t\t\txhr.onload = (e) => {\n\t\t\t\tif (xhr.response != null) {\n\t\t\t\t\tthis.playWithBuffer(xhr.response);\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send();\n\t\t}\n\t}\n\n\tpauseListener(e: Event) {\n\t\tlet button = <HTMLInputElement> e.target;\n\t\tif (this.wasy.paused) {\n\t\t\tthis.wasy.resume();\n\t\t\tbutton.value = \"pause\";\n\t\t} else {\n\t\t\tthis.wasy.pause();\n\t\t\tbutton.value = \"resume\";\n\t\t}\n\t}\n\n\tmidiEventListener(e: midi.Event) {\n\t\tthis.wasy.receiveExternalMidiEvent(e);\n\t}\n\n\tplayWithBuffer(buffer?: ArrayBuffer) {\n\t\tif (this.wasy != null) {\n\t\t\tthis.wasy.destroy();\n\t\t\tthis.wasy = null;\n\t\t}\n\t\tif (this.timerId != null) {\n\t\t\tclearInterval(this.timerId);\n\t\t\tthis.timerId = null;\n\t\t}\n\n\t\tif (this.analyser) this.analyser.disconnect();\n\t\tthis.analyser = this.audioContext.createAnalyser();\n\t\tthis.analyser.connect(this.audioContext.destination);\n\t\tthis.analyserView.analyser = this.analyser;\n\t\tthis.analyser.smoothingTimeConstant = 0;\n\n\t\tthis.wasy = new wasy.Wasy(this.audioContext, this.analyser, buffer);\n\t\tthis.wasy.play();\n\t\tthis.wasy.onTimedEvent(this.keyboardView.timedEventListener.bind(this.keyboardView));\n\t\tthis.timerId = setInterval(() => {\n\t\t\tthis.analyserView.draw();\n\t\t\tthis.keyboardView.draw()\n\t\t}, 1000 / 60);\n\t}\n\n\tgetAudioContext() {\n\t\tlet audioContext: AudioContext;\n\t\tlet webkitAudioContext = (<any> window).webkitAudioContext;\n\t\tif (typeof AudioContext !== \"undefined\") {\n\t\t\taudioContext = new AudioContext();\n\t\t} else if (typeof webkitAudioContext !== \"undefined\") {\n\t\t\taudioContext = new webkitAudioContext();\n\t\t}\n\t\treturn audioContext;\n\t}\n}\n\nlet app = new Application();\napp.start();\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wasy = require(\"./wasy\");\nexports.wasy = wasy;\nconst midiIn = require(\"./webmidi/midi-in\");\nexports.midiIn = midiIn;\nconst midi = require(\"./midi/event\");\nexports.midi = midi;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst midi = require(\"./midi/event\");\nconst timer = require(\"./player/timer\");\nconst signal_1 = require(\"./signal\");\nconst inst = require(\"./midi/instrument\");\nconst synth_1 = require(\"./synth\");\nclass Wasy {\n    constructor(audioContext, destination, buffer) {\n        this.audioContext = audioContext;\n        if (buffer != null) {\n            this.playerWorker = new Worker(\"./player-worker.js\");\n            let initMessage = { type: \"init\", buffer };\n            this.playerWorker.postMessage(initMessage, [initMessage.buffer]);\n            this.playerWorker.postMessage({ type: \"resolution\" });\n            this.playerWorker.addEventListener(\"message\", this.playerWorkerMessageListener.bind(this));\n        }\n        this.timer = new timer.Timer(this.audioContext);\n        this.timer.onTiming(this.timingListener.bind(this));\n        this.patchGenerator = new synth_1.PatchGenerator();\n        this.instruments = [];\n        this.gain = this.audioContext.createGain();\n        this.gain.gain.value = 0.1;\n        this.dynamicsCompressor = this.audioContext.createDynamicsCompressor();\n        this.gain.connect(this.dynamicsCompressor);\n        this.dynamicsCompressor.connect(destination);\n        for (let i = 0; i < 16; ++i) {\n            let instrument = new inst.Instrument(this.audioContext, this.gain);\n            instrument.patch = this.patchGenerator.generate(instrument, 0, i === 9);\n            this.instruments[i] = instrument;\n            instrument.onExpired((data) => {\n                data.data.parentPatch.onExpired(data.data, data.time);\n            });\n            instrument.onProgramChange((event) => {\n                instrument.patch = this.patchGenerator.generate(instrument, event.program, i === 9);\n            });\n        }\n        this.paused = false;\n        this._emitter = new signal_1.default();\n    }\n    play() {\n        this.timer.start();\n    }\n    pause() {\n        if (this.paused)\n            return;\n        this.timer.invalidate();\n        for (let instrument of this.instruments) {\n            instrument.pause();\n        }\n        this.paused = true;\n    }\n    resume() {\n        if (!this.paused)\n            return;\n        this.timer.resume();\n        this.paused = false;\n    }\n    destroy() {\n        this.timer.invalidate();\n        this.playerWorker = null;\n        this._emitter.offAll();\n        for (let instrument of this.instruments) {\n            instrument.destroy();\n        }\n    }\n    playerWorkerMessageListener(event) {\n        switch (event.data.type) {\n            case \"resolution\":\n                this.timer.resolution = event.data.resolution;\n                break;\n            case \"read\":\n                if (this.paused)\n                    break;\n                let newEventsStore = event.data.newEventsStore;\n                let timeStamp = event.data.timeStamp;\n                timeStamp.__proto__ = timer.TimeStamp.prototype;\n                newEventsStore.forEach((newEvents, channelNumber) => {\n                    for (let newEvent of newEvents) {\n                        let event = midi.Event.create(newEvent.dataView, newEvent.tick, newEvent.status);\n                        this._emitter.emit({ timeStamp, midiEvent: event });\n                        let time = timeStamp.accurateTime(event.tick);\n                        this.instruments[channelNumber].receiveEvent(event, time);\n                        if (channelNumber === 0) {\n                            if (event instanceof midi.TempoMetaEvent) {\n                                this.timer.secondsPerBeat = event.secondsPerBeat;\n                            }\n                        }\n                    }\n                });\n                break;\n            default:\n                break;\n        }\n    }\n    receiveExternalMidiEvent(event) {\n        const time = this.audioContext.currentTime;\n        if (event instanceof midi.ChannelEvent) {\n            this.instruments[event.channel].receiveEvent(event, time);\n        }\n        else {\n            for (const instrument of this.instruments) {\n                instrument.receiveEvent(event, time);\n            }\n        }\n        const timeStamp = this.timer.createTimeStamp();\n        timeStamp.currentTime = time;\n        this._emitter.emit({ timeStamp, midiEvent: event });\n    }\n    onTimedEvent(listener) {\n        this._emitter.on(listener);\n    }\n    offTimedEvent(listener) {\n        this._emitter.off(listener);\n    }\n    timingListener(timeStamp) {\n        if (this.playerWorker != null) {\n            this.playerWorker.postMessage({ type: \"read\", timeStamp });\n        }\n    }\n}\nexports.Wasy = Wasy;\n//# sourceMappingURL=wasy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/wasy.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst signal_1 = require(\"../signal\");\nclass TimeStamp {\n    accurateTime(tick) {\n        let diff = (tick - this.oldTick) / this.ticksPerSecond;\n        return this.currentTime + this.delayInSeconds + diff;\n    }\n}\nexports.TimeStamp = TimeStamp;\nclass Timer {\n    constructor(audioContext, resolution = 480, durationInSeconds = 0.2) {\n        this.audioContext = audioContext;\n        this.resolution = resolution;\n        this.durationInSeconds = durationInSeconds;\n        this.beatsPerMinute = 120;\n        this.delayInSeconds = 0.2;\n        this._emitter = new signal_1.default();\n    }\n    get ticksPerSecond() { return this.resolution / this.secondsPerBeat; }\n    set ticksPerSecond(tps) { this.secondsPerBeat = this.resolution / tps; }\n    get beatsPerMinute() { return 60 / this.secondsPerBeat; }\n    set beatsPerMinute(bpm) { this.secondsPerBeat = 60 / bpm; }\n    start() {\n        this.currentTime = this.audioContext.currentTime;\n        this.oldTick = 0;\n        this.tick = 0;\n        this.invalidate();\n        this.timerId = setInterval(this.timing.bind(this), this.durationInSeconds * 1000);\n    }\n    onTiming(listener) {\n        this._emitter.on(listener);\n    }\n    offTiming(listener) {\n        this._emitter.off(listener);\n    }\n    timing() {\n        this.oldTick = this.tick;\n        this.tick += this.ticksPerSecond * this.durationInSeconds;\n        this.currentTime = this.audioContext.currentTime;\n        this._emitter.emit(this.createTimeStamp());\n    }\n    createTimeStamp() {\n        let timeStamp = new TimeStamp();\n        timeStamp.tick = this.tick;\n        timeStamp.oldTick = this.oldTick;\n        timeStamp.currentTime = this.currentTime;\n        timeStamp.delayInSeconds = this.delayInSeconds;\n        timeStamp.ticksPerSecond = this.ticksPerSecond;\n        return timeStamp;\n    }\n    invalidate() {\n        if (this.timerId != null) {\n            clearInterval(this.timerId);\n        }\n        this.timerId = null;\n    }\n    resume() {\n        this.invalidate();\n        this.timerId = setInterval(this.timing.bind(this), this.durationInSeconds * 1000);\n    }\n}\nexports.Timer = Timer;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/player/timer.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst midi = require(\"./event\");\nconst signal_1 = require(\"../signal\");\nclass NotePool {\n    constructor(polyphony = 16) {\n        this.polyphony = polyphony;\n        this._noteStore = {};\n        this._noteNumberQueue = [];\n        this._expiredEmitter = new signal_1.default();\n    }\n    onExpired(listener) {\n        this._expiredEmitter.on(listener);\n    }\n    offExpired(listener) {\n        this._expiredEmitter.off(listener);\n    }\n    register(noteNumber, data, time) {\n        // check store\n        {\n            let oldData = this._noteStore[noteNumber];\n            if (oldData != null) {\n                this._expiredEmitter.emit({ data: oldData, time });\n                let oldIndex = this._noteNumberQueue.indexOf(noteNumber);\n                if (oldIndex !== -1) {\n                    this._noteNumberQueue.splice(oldIndex, 1);\n                }\n            }\n            this._noteStore[noteNumber] = data;\n        }\n        // check queue\n        {\n            this._noteNumberQueue.push(noteNumber);\n            while (this._noteNumberQueue.length > this.polyphony) {\n                let oldNoteNumber = this._noteNumberQueue.shift();\n                this._expiredEmitter.emit({ data: this._noteStore[oldNoteNumber], time });\n                this._noteStore[oldNoteNumber] = null;\n            }\n        }\n    }\n    unregister(noteNumber, time) {\n        let oldData = this._noteStore[noteNumber];\n        if (oldData != null) {\n            this._expiredEmitter.emit({ data: oldData, time });\n            let oldIndex = this._noteNumberQueue.indexOf(noteNumber);\n            if (oldIndex !== -1) {\n                this._noteNumberQueue.splice(oldIndex, 1);\n            }\n        }\n    }\n    unregisterAll(time = 0) {\n        for (let noteNumber of this._noteNumberQueue) {\n            this._expiredEmitter.emit({ data: this._noteStore[noteNumber], time });\n        }\n        this._noteStore = {};\n        this._noteNumberQueue = [];\n    }\n    find(noteNumber) {\n        return this._noteStore[noteNumber];\n    }\n    get noteStore() {\n        return this._noteStore;\n    }\n    get noteNumberQueue() {\n        return this._noteNumberQueue;\n    }\n}\nexports.NotePool = NotePool;\nclass Instrument {\n    constructor(audioContext, destination) {\n        this.audioContext = audioContext;\n        this.destination = destination;\n        this.notePool = new NotePool();\n        this.notePool.onExpired(this._expiredListener.bind(this));\n        this._expiredEmitter = new signal_1.default();\n        this._programChangeEmitter = new signal_1.default();\n        this._panner = this.audioContext.createPanner();\n        this._gain = this.audioContext.createGain();\n        this.source = this._panner;\n        this._panner.connect(this._gain);\n        this._gain.connect(destination);\n        this.resetAllControl();\n    }\n    resetAllControl() {\n        this.volume = 100;\n        this.panpot = 64;\n        this.expression = 127;\n        this.pitchBend = 0;\n        this.pitchBendRange = 2;\n        this.dataEntry = 0;\n        this.rpn = 0;\n    }\n    destroy() {\n        this.notePool.unregisterAll();\n        this._expiredEmitter.offAll();\n        this._programChangeEmitter.offAll();\n    }\n    pause() {\n        this.notePool.unregisterAll();\n    }\n    setPanpot(panpot) {\n        this.panpot = panpot;\n        var value = (panpot - 64) * Math.PI / (64 * 2);\n        this._panner.setPosition(Math.sin(value), 0, -Math.cos(value));\n    }\n    setVolume(volume, time) {\n        this.volume = volume;\n        this._gain.gain.cancelScheduledValues(time);\n        this._gain.gain.setValueAtTime(volume / 127 * this.expression / 127, time);\n    }\n    setExpression(expression, time) {\n        this.expression = expression;\n        this._gain.gain.cancelScheduledValues(time);\n        this._gain.gain.setValueAtTime(this.volume / 127 * expression / 127, time);\n    }\n    set detune(detune) { this.pitchBend = detune / 100 / this.pitchBendRange * 8192; }\n    get detune() { return this.pitchBend / 8192 * this.pitchBendRange * 100; }\n    registerNote(noteNumber, data, time) {\n        this.notePool.register(noteNumber, data, time);\n    }\n    findNote(noteNumber) {\n        return this.notePool.find(noteNumber);\n    }\n    expireNote(noteNumber, time) {\n        this.notePool.unregister(noteNumber, time);\n    }\n    get noteStore() {\n        return this.notePool.noteStore;\n    }\n    onExpired(listener) {\n        this._expiredEmitter.on(listener);\n    }\n    offExpired(listener) {\n        this._expiredEmitter.off(listener);\n    }\n    _expiredListener(message) {\n        this._expiredEmitter.emit(message);\n    }\n    onProgramChange(listener) {\n        this._programChangeEmitter.on(listener);\n    }\n    offProgramChange(listener) {\n        this._programChangeEmitter.off(listener);\n    }\n    receiveEvent(event, time) {\n        if (event instanceof midi.ControlChangeEvent) {\n            switch (event.controller) {\n                case 7:// Volume\n                    this.setVolume(event.value, time);\n                    break;\n                case 10:// Panpot\n                    this.setPanpot(event.value);\n                    break;\n                case 11:// Expression\n                    this.setExpression(event.value, time);\n                    break;\n                case 6:// DataEntryMSB\n                    this.dataEntry &= 0b11111110000000;\n                    this.dataEntry |= event.value;\n                    this.receiveRPN(this.rpn, this.dataEntry, time);\n                    break;\n                case 38:// DataEntryLSB\n                    this.dataEntry &= 0b00000001111111;\n                    this.dataEntry |= event.value << 7;\n                    break;\n                case 100:// RPN LSB\n                    this.rpn &= 0b11111110000000;\n                    this.rpn |= event.value;\n                    break;\n                case 101:// RPN MSB\n                    this.rpn &= 0b00000001111111;\n                    this.rpn |= event.value << 7;\n                    break;\n                case 120:// AllSoundOff\n                    this.notePool.unregisterAll();\n                    break;\n                case 121:// ResetAllControl\n                    this.resetAllControl();\n                    break;\n                default:\n                    if (this.patch) {\n                        this.patch.receiveEvent(event, time);\n                    }\n                    break;\n            }\n        }\n        else if (event instanceof midi.ProgramChangeEvent) {\n            this._programChangeEmitter.emit(event);\n        }\n        else {\n            if (this.patch) {\n                this.patch.receiveEvent(event, time);\n            }\n        }\n    }\n    receiveRPN(rpn, data, time) {\n        switch (rpn) {\n            case 0:// pitch bend range\n                this.pitchBendRange = data;\n                break;\n            default:\n                break;\n        }\n    }\n}\nexports.Instrument = Instrument;\n//# sourceMappingURL=instrument.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/midi/instrument.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst patch_1 = require(\"./synth/patch\");\nclass SimpleOscillatorMonophony extends patch_1.Monophony {\n}\nexports.SimpleOscillatorMonophony = SimpleOscillatorMonophony;\nclass SimpleOscillatorPatch extends patch_1.Patch {\n    constructor(instrument, oscillatorType = \"square\", destination) {\n        super(instrument, destination);\n        this.oscillatorType = oscillatorType;\n    }\n    onNoteOn(event, time) {\n        // initialize\n        let monophony = new SimpleOscillatorMonophony();\n        let oscillator = this.audioContext.createOscillator();\n        let gain = this.audioContext.createGain();\n        monophony.oscillator = oscillator;\n        monophony.gain = gain;\n        monophony.managedNodes = [oscillator, gain];\n        monophony.detunableNodes = [oscillator];\n        // settings\n        oscillator.type = this.oscillatorType;\n        oscillator.frequency.value = this.tuning.frequency(event.noteNumber);\n        oscillator.detune.value = this.detune;\n        gain.gain.value = event.velocity / 127;\n        // connect\n        oscillator.connect(gain);\n        gain.connect(this.destination);\n        // start\n        oscillator.start(time);\n        return monophony;\n    }\n    onNoteOff(monophony, time) {\n        monophony.oscillator.stop(time);\n        monophony.gain.gain.cancelScheduledValues(time);\n        monophony.gain.gain.setValueAtTime(0, time);\n    }\n    onExpired(monophony, time) {\n        this.onNoteOff(monophony, time);\n    }\n}\nexports.SimpleOscillatorPatch = SimpleOscillatorPatch;\nclass NoiseMonophony extends patch_1.Monophony {\n}\nexports.NoiseMonophony = NoiseMonophony;\nclass NoisePatch extends patch_1.Patch {\n    constructor(instrument, destination) {\n        super(instrument, destination);\n        if (NoisePatch.noiseBuffer == null) {\n            var frame = 44100 * 2;\n            let buf = this.audioContext.createBuffer(2, frame, this.audioContext.sampleRate);\n            let data0 = buf.getChannelData(0);\n            let data1 = buf.getChannelData(1);\n            for (var i = 0; i < data0.length; ++i) {\n                data0[i] = (Math.random() * 2 - 1);\n                data1[i] = (Math.random() * 2 - 1);\n            }\n            NoisePatch.noiseBuffer = buf;\n        }\n    }\n    onNoteOn(event, time) {\n        // initialize\n        let monophony = new NoiseMonophony();\n        let source = this.audioContext.createBufferSource();\n        let filter = this.audioContext.createBiquadFilter();\n        let gain = this.audioContext.createGain();\n        monophony.source = source;\n        monophony.filter = filter;\n        monophony.gain = gain;\n        monophony.managedNodes = [source, filter, gain];\n        monophony.detunableNodes = [filter];\n        // settings\n        source.buffer = NoisePatch.noiseBuffer;\n        source.loop = true;\n        filter.type = \"bandpass\";\n        filter.frequency.value = this.tuning.frequency(event.noteNumber + 24);\n        filter.detune.value = this.detune;\n        filter.Q.value = 1;\n        gain.gain.value = event.velocity / 127;\n        // connect\n        source.connect(filter);\n        filter.connect(gain);\n        gain.connect(this.destination);\n        // start\n        source.start(time);\n        return monophony;\n    }\n    onNoteOff(monophony, time) {\n        monophony.source.stop(time);\n        monophony.gain.gain.cancelScheduledValues(time);\n        monophony.gain.gain.setValueAtTime(0, time);\n    }\n    onExpired(monophony, time) {\n        this.onNoteOff(monophony, time);\n    }\n}\nexports.NoisePatch = NoisePatch;\nclass GainedNoisePatch extends NoisePatch {\n    constructor(instrument, valueAtBegin, valueAtEnd, duration, fixedFrequency, destination) {\n        super(instrument, destination);\n        this.valueAtBegin = valueAtBegin;\n        this.valueAtEnd = valueAtEnd;\n        this.duration = duration;\n        this.fixedFrequency = fixedFrequency;\n    }\n    onNoteOn(event, time) {\n        let monophony = super.onNoteOn(event, time);\n        let filter = monophony.filter;\n        let gain = monophony.gain;\n        if (this.fixedFrequency != null) {\n            filter.frequency.value = this.fixedFrequency;\n        }\n        else {\n            filter.frequency.value = this.tuning.frequency(event.noteNumber + 24);\n        }\n        let baseGain = gain.gain.value;\n        gain.gain.setValueAtTime(this.valueAtBegin * baseGain, time);\n        gain.gain.linearRampToValueAtTime(this.valueAtEnd * baseGain, time + this.duration);\n        return monophony;\n    }\n}\nexports.GainedNoisePatch = GainedNoisePatch;\nclass OneShotNoisePatch extends GainedNoisePatch {\n    onNoteOff(monophony, time) {\n    }\n    onExpired(monophony, time) {\n        super.onExpired(monophony, time);\n        monophony.source.stop(time);\n        monophony.gain.gain.cancelScheduledValues(time);\n        monophony.gain.gain.setValueAtTime(0, time);\n    }\n}\nexports.OneShotNoisePatch = OneShotNoisePatch;\nclass GainedOscillatorPatch extends SimpleOscillatorPatch {\n    constructor(instrument, valueAtBegin, valueAtEnd, duration, oscillatorType, destination) {\n        super(instrument, oscillatorType, destination);\n        this.valueAtBegin = valueAtBegin;\n        this.valueAtEnd = valueAtEnd;\n        this.duration = duration;\n    }\n    onNoteOn(event, time) {\n        let monophony = super.onNoteOn(event, time);\n        let gain = monophony.gain;\n        let baseGain = gain.gain.value;\n        gain.gain.setValueAtTime(this.valueAtBegin * baseGain, time);\n        gain.gain.linearRampToValueAtTime(this.valueAtEnd * baseGain, time + this.duration);\n        return monophony;\n    }\n}\nexports.GainedOscillatorPatch = GainedOscillatorPatch;\nclass OneShotOscillatorPatch extends GainedOscillatorPatch {\n    constructor(instrument, duration, fixedFrequency, oscillatorType, destination) {\n        super(instrument, 1, 0, duration, oscillatorType, destination);\n        this.fixedFrequency = fixedFrequency;\n    }\n    onNoteOn(event, time) {\n        let monophony = super.onNoteOn(event, time);\n        let oscillator = monophony.oscillator;\n        let frequency;\n        if (this.fixedFrequency != null) {\n            frequency = this.fixedFrequency;\n        }\n        else {\n            frequency = this.tuning.frequency(event.noteNumber + 24);\n        }\n        oscillator.frequency.setValueAtTime(frequency, time);\n        oscillator.frequency.linearRampToValueAtTime(0, time + this.duration);\n        return monophony;\n    }\n    onNoteOff(monophony, time) {\n    }\n    onExpired(monophony, time) {\n        super.onExpired(monophony, time);\n        monophony.oscillator.stop(time);\n        monophony.gain.gain.cancelScheduledValues(time);\n        monophony.gain.gain.setValueAtTime(0, time);\n    }\n}\nexports.OneShotOscillatorPatch = OneShotOscillatorPatch;\nclass DrumKitPatch extends patch_1.Patch {\n    constructor(instrument, destination) {\n        let is = instrument;\n        let ds = destination;\n        super(is, ds);\n        ds = this.destination;\n        // gain\n        let ga = this.audioContext.createGain();\n        this.gain = ga;\n        this.gain.gain.value = 2;\n        ga.connect(ds);\n        // panner\n        let lp = this.audioContext.createPanner();\n        this.leftPanpot = lp;\n        let lpValue = (32 - 64) * Math.PI / (64 * 2);\n        lp.setPosition(Math.sin(lpValue), 0, -Math.cos(lpValue));\n        lp.connect(ga);\n        let rp = this.audioContext.createPanner();\n        this.rightPanpot = rp;\n        let rpValue = (96 - 64) * Math.PI / (64 * 2);\n        rp.setPosition(Math.sin(rpValue), 0, -Math.cos(rpValue));\n        rp.connect(ga);\n        // assign\n        this.patchMap = {\n            0: new OneShotNoisePatch(is, 1, 0, 0.05, null, ga),\n            35: new OneShotOscillatorPatch(is, 0.2, 140, \"sine\", ga),\n            36: new OneShotOscillatorPatch(is, 0.2, 150, \"square\", ga),\n            37: new OneShotNoisePatch(is, 1, 0, 0.1, 2000, ga),\n            38: new OneShotNoisePatch(is, 1, 0, 0.3, 1000, ga),\n            39: new OneShotNoisePatch(is, 1, 0, 0.4, 3000, ga),\n            40: new OneShotNoisePatch(is, 1, 0, 0.5, 1500, ga),\n            41: new OneShotOscillatorPatch(is, 0.3, 200, \"sine\", rp),\n            42: new OneShotNoisePatch(is, 1, 0, 0.1, 6000, lp),\n            43: new OneShotOscillatorPatch(is, 0.3, 250, \"sine\", rp),\n            44: new OneShotNoisePatch(is, 1, 0, 0.1, 5000, lp),\n            45: new OneShotOscillatorPatch(is, 0.3, 350, \"sine\", rp),\n            46: new OneShotNoisePatch(is, 1, 0, 0.3, 6000, lp),\n            47: new OneShotOscillatorPatch(is, 0.3, 400, \"sine\", rp),\n            48: new OneShotOscillatorPatch(is, 0.3, 500, \"sine\", rp),\n            49: new OneShotNoisePatch(is, 1, 0, 1.5, 8000, ga),\n            50: new OneShotOscillatorPatch(is, 0.3, 550, \"sine\", rp),\n            51: new OneShotNoisePatch(is, 1, 0, 0.5, 16000, ga),\n        };\n    }\n    onNoteOn(event, time) {\n        let index = event.noteNumber;\n        if (!(index in this.patchMap)) {\n            index = 0;\n        }\n        const patch = this.patchMap[index];\n        const hiHats = [42, 44, 46];\n        if (hiHats.indexOf(index) != -1) {\n            for (const hiHat of hiHats) {\n                if (hiHat === index)\n                    continue;\n                this.instrument.expireNote(hiHat, time);\n            }\n        }\n        const monophony = patch.onNoteOn(event, time);\n        monophony.parentPatch = patch;\n        return monophony;\n    }\n    onNoteOff(monophony, time) {\n        monophony.parentPatch.onNoteOff(monophony, time);\n    }\n    onExpired(monophony, time) {\n        monophony.parentPatch.onExpired(monophony, time);\n    }\n}\nexports.DrumKitPatch = DrumKitPatch;\nclass PatchGenerator {\n    generate(instrument, program, isDrum = false) {\n        const simpleMap = {\n            0x00: \"sine\",\n            0x01: \"triangle\",\n            0x02: \"triangle\",\n            0x03: \"triangle\",\n            0x04: \"triangle\",\n            0x05: \"triangle\",\n            0x10: \"sine\",\n            0x11: \"sine\",\n            0x12: \"sine\",\n            0x13: \"sine\",\n            0x14: \"triangle\",\n            0x1D: \"sawtooth\",\n            0x1E: \"sawtooth\",\n            0x30: \"triangle\",\n            0x31: \"triangle\",\n            0x32: \"triangle\",\n            0x33: \"triangle\",\n            0x51: \"sawtooth\",\n        };\n        if (isDrum) {\n            return new DrumKitPatch(instrument);\n        }\n        else {\n            if (program === 0x77) {\n                return new GainedNoisePatch(instrument, 0, 1, 1);\n            }\n            else if (program === 0x7E) {\n                return new NoisePatch(instrument);\n            }\n            else if (program in simpleMap) {\n                let oscillatorType = simpleMap[program];\n                if (program <= 0x05) {\n                    return new GainedOscillatorPatch(instrument, 1.2, 0.1, 0.7, oscillatorType);\n                }\n                else {\n                    return new SimpleOscillatorPatch(instrument, oscillatorType);\n                }\n            }\n            else {\n                return new SimpleOscillatorPatch(instrument, \"square\");\n            }\n        }\n    }\n}\nexports.PatchGenerator = PatchGenerator;\n//# sourceMappingURL=synth.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/synth.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst midi = require(\"../midi/event\");\nconst tuning = require(\"../player/tuning\");\nclass Monophony {\n}\nexports.Monophony = Monophony;\nclass Patch {\n    constructor(instrument, destination = instrument.source) {\n        this.instrument = instrument;\n        this.destination = destination;\n        this.tuning = new tuning.EqualTemperamentTuning();\n    }\n    get detune() { return this.instrument.detune; }\n    set detune(detune) { this.instrument.detune = detune; }\n    get audioContext() { return this.instrument.audioContext; }\n    receiveEvent(event, time) {\n        if (event instanceof midi.NoteOnEvent) {\n            let monophony = this.onNoteOn(event, time);\n            if (monophony != null) {\n                if (monophony.parentPatch == null) {\n                    monophony.parentPatch = this;\n                }\n                this.instrument.registerNote(event.noteNumber, monophony, time);\n            }\n        }\n        else if (event instanceof midi.NoteOffEvent) {\n            let monophony = this.instrument.findNote(event.noteNumber);\n            if (monophony != null) {\n                this.onNoteOff(monophony, time);\n            }\n        }\n        else if (event instanceof midi.PitchBendEvent) {\n            for (let key in this.instrument.noteStore) {\n                let monophony = this.instrument.noteStore[key];\n                if (monophony != null && monophony.parentPatch === this) {\n                    this.onPitchBend(event, monophony, time);\n                }\n            }\n        }\n    }\n    onNoteOn(event, time) {\n        return null;\n    }\n    onNoteOff(data, time) {\n    }\n    onExpired(monophony, time) {\n        setTimeout(() => {\n            for (let node of monophony.managedNodes) {\n                node.disconnect();\n            }\n        }, 1000);\n    }\n    onPitchBend(event, monophony, time) {\n        if (monophony.detunableNodes != null) {\n            for (let node of monophony.detunableNodes) {\n                let oscillator = node;\n                this.instrument.pitchBend = event.value;\n                oscillator.detune.setValueAtTime(this.detune, time);\n            }\n        }\n    }\n}\nexports.Patch = Patch;\n//# sourceMappingURL=patch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/synth/patch.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass EqualTemperamentTuning {\n    constructor(_frequencyOf69 = 440) {\n        this._frequencyOf69 = _frequencyOf69;\n        this._cache = {};\n    }\n    frequency(noteNumber) {\n        if (noteNumber in this._cache) {\n            return this._cache[noteNumber];\n        }\n        else {\n            let frequency = this._frequencyOf69 * Math.pow(2, (noteNumber - 69) / 12);\n            this._cache[noteNumber] = frequency;\n            return frequency;\n        }\n    }\n}\nexports.EqualTemperamentTuning = EqualTemperamentTuning;\n//# sourceMappingURL=tuning.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/player/tuning.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst midi = require(\"../midi/event\");\nconst dvu = require(\"../binary/data-view-util\");\nconst signal_1 = require(\"../signal\");\nclass MIDIIn {\n    constructor() {\n        this._emitter = new signal_1.default();\n    }\n    on(listener) {\n        this._emitter.on(listener);\n    }\n    off(listener) {\n        this._emitter.off(listener);\n    }\n    offAll() {\n        this._emitter.offAll();\n    }\n    emit(event) {\n        this._emitter.emit(event);\n    }\n}\nexports.MIDIIn = MIDIIn;\nclass WebMIDIIn extends MIDIIn {\n    constructor() {\n        super();\n        if (!navigator.requestMIDIAccess) {\n            return;\n        }\n        navigator.requestMIDIAccess().then((midiAccess) => {\n            const it = midiAccess.inputs.values();\n            for (let input = it.next(); !input.done; input = it.next()) {\n                console.log(input.value);\n                input.value.onmidimessage = (event) => {\n                    const dataView = new DataView(event.data.buffer);\n                    const status = dataView.getUint8(0);\n                    const subDataView = dvu.dataViewGetSubDataView(dataView, 1);\n                    const midiEvent = midi.Event.create(subDataView, 0, status);\n                    this.emit(midiEvent);\n                };\n            }\n        }, (reason) => {\n            console.log(reason);\n        });\n    }\n}\nexports.WebMIDIIn = WebMIDIIn;\nclass WebMidiLinkIn extends MIDIIn {\n    constructor() {\n        super();\n        window.addEventListener(\"message\", (event) => {\n            const elems = event.data.split(\",\");\n            if (elems[0] === \"midi\") {\n                const ints = elems.slice(1).map(x => parseInt(x, 16));\n                const bytes = new Uint8Array(ints);\n                const dataView = new DataView(bytes.buffer);\n                const status = dataView.getUint8(0);\n                const subDataView = dvu.dataViewGetSubDataView(dataView, 1);\n                const midiEvent = midi.Event.create(subDataView, 0, status);\n                this.emit(midiEvent);\n            }\n        }, false);\n    }\n}\nexports.WebMidiLinkIn = WebMidiLinkIn;\n//# sourceMappingURL=midi-in.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wasy/dist/webmidi/midi-in.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}